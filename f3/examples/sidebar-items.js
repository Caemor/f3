initSidebarItems({"mod":[["abort","`intrinsics::abort` triggers an exception"],["angle_meter","Find the orientation of the board by integrating the angular rate"],["exception","Exceptions handlers are smart! They help you find the source of crashes"],["fpu","You can do fast, single precision, floating point math as well"],["i2c_read_multi","I2C - read several magnetometer registers in \"one shot\""],["i2c_read_single","I2C - read one of the accelerometer registers"],["itm","With the `iprint!` macros you can send `print!`-formatted messages to the HOST"],["led_compass_1","A LED compass that points to the North, take 1"],["led_compass_2","A LED compass that points to the North, take 2"],["led_compass_3","A LED compass that points to the North, take 3"],["led_roulette","A LED roulette!"],["minimal","Minimal binary size"],["override_default_exception_handler","Override the default exception handler"],["override_exception","Override the hard fault (or any other) exception handler"],["override_init","Override the initialization routine that runs before `main`"],["override_interrupt","Override the TIM7 (or any other) interrupt handler"],["override_panic_fmt","Override `panic_fmt`"],["panic","`panic!`s send their messages to the ITM"],["serial","Send a message over the \"Serial Port\""],["spi_read_multi","SPI - read multiple gyroscope registers in \"one shot\""],["spi_read_single","SPI - read one of the gyroscope registers"],["timeit","Timing sections of code"]]});